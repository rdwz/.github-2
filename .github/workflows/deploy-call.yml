---
name: "üöÄ Deploy"

on:
  push:
    branches: [ main ]
    tags: ['v*.*.*']
  workflow_dispatch:
  workflow_call:

jobs:
  publish:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
      cancel-in-progress: true
    strategy:
      matrix:
        repo: [z-a-meta-plugins]
    steps:
      - name: ‚§µÔ∏è Check out code from GitHub
        uses: actions/checkout@v3
        with:
          # Repository name with owner. For example, actions/checkout
          # Default: ${{ github.repository }}
          repository: 'z-shell/${{ matrix.repo }}'
          # The branch, tag or SHA to checkout. When checking out the repository that
          # triggered a workflow, this defaults to the reference or SHA for that event.
          # Otherwise, uses the default branch.
          ref: 'main'
          # Personal access token (PAT) used to fetch the repository. The PAT is configured
          # with the local git config, which enables your scripts to run authenticated git
          # commands. The post-job step removes the PAT.
          #
          # We recommend using a service account with the least permissions necessary. Also
          # when generating a new PAT, select the least scopes necessary.
          #
          # [Learn more about creating and using encrypted secrets](https://help.github.com/en/actions/automating-your-workflow-with-github-actions/creating-and-using-encrypted-secrets)
          #
          # Default: ${{ github.token }}
          token: '${{ secrets.GH_PAT }}'
          # SSH key used to fetch the repository. The SSH key is configured with the local
          # git config, which enables your scripts to run authenticated git commands. The
          # post-job step removes the SSH key.
          #
          # We recommend using a service account with the least permissions necessary.
          #
          # [Learn more about creating and using encrypted secrets](https://help.github.com/en/actions/automating-your-workflow-with-github-actions/creating-and-using-encrypted-secrets)
          #ssh-key: ''
          # Known hosts in addition to the user and global host key database. The public SSH
          # keys for a host may be obtained using the utility `ssh-keyscan`. For example,
          # `ssh-keyscan github.com`. The public key for github.com is always implicitly added.
          #ssh-known-hosts: ''
          # Whether to perform strict host key checking. When true, adds the options
          # `StrictHostKeyChecking=yes` and `CheckHostIP=no` to the SSH command line. Use
          # the input `ssh-known-hosts` to configure additional hosts.
          # Default: true
          #ssh-strict: ''
          # Whether to configure the token or SSH key with the local git config
          # Default: true
          #persist-credentials: ''
          # Relative path under $GITHUB_WORKSPACE to place the repository
          path: 'docs'
          # Whether to execute `git clean -ffdx && git reset --hard HEAD` before fetching
          # Default: true
          clean: 'true'
          # Number of commits to fetch. 0 indicates all history for all branches and tags.
          # Default: 1
          fetch-depth: '0'
          # Whether to download Git-LFS files
          # Default: false
          lfs: 'false'
          # Whether to checkout submodules: `true` to checkout submodules or `recursive` to
          # recursively checkout submodules.
          #
          # When the `ssh-key` input is not provided, SSH URLs beginning with
          # `git@github.com:` are converted to HTTPS.
          #
          # Default: false
          submodules: 'false'
          # Add repository path as safe.directory for Git global config by running `git
          # config --global --add safe.directory <path>`
          # Default: true
          set-safe-directory: 'true'
        id: prepare_tag
        if: startsWith(github.ref, 'refs/tags/')
      - run: |
          TAG_NAME="${GITHUB_REF##refs/tags/}"
          echo "::set-output name=tag_name::${TAG_NAME}"
          echo "::set-output name=deploy_tag_name::deploy-${TAG_NAME}"
      - name: 'üöÄ Deploy'
        uses: peaceiris/actions-gh-pages@v3
        with:
          personal_token: '${{ secrets.GH_PAT }}'
          #deploy_key: ${{ secrets.DEPLOY_KEY }}
          external_repository: 'z-shell/${{ matrix.repo }}'
          publish_branch: 'gh-pages'
          publish_dir: './docs'
          #cname: wiki.zshell.dev
          keep_files: true
          allow_empty_commit: true
          user_name: 'digital-teams[bot]'
          user_email: 'digital-teams@pm.me'
          full_commit_message: '${{ github.event.head_commit.message }}'
          tag_name: '${{ steps.prepare_tag.outputs.deploy_tag_name }}'
          tag_message: 'Deployment ${{ steps.prepare_tag.outputs.tag_name }}'
